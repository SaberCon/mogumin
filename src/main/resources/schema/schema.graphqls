"""The query root of GraphQL interface."""
type Query {
    """Fetches an object given its ID."""
    node(
        """ID of the object."""
        id: ID!
    ): Node

    """Lookup nodes by a list of IDs."""
    nodes(
        """The list of node IDs."""
        ids: [ID!]!
    ): [Node]!

    """The currently authenticated user."""
    viewer: User!
}

type Mutation {
    test: String
}

"""Information about pagination in a connection."""
type PageInfo {
    """When paginating forwards, the cursor to continue."""
    endCursor: String

    """When paginating forwards, are there more items?"""
    hasNextPage: Boolean!

    """When paginating backwards, are there more items?"""
    hasPreviousPage: Boolean!

    """When paginating backwards, the cursor to continue."""
    startCursor: String
}

"""An object with an ID."""
interface Node {
    """ID of the object."""
    id: ID!
}

interface Datetimexxxxxx {
    """Identifies the date and time when the object was created."""
    createdAt: DateTime!

    """Identifies the date and time when the object was last updated."""
    updatedAt: DateTime!
}

"""An ISO-8601 encoded UTC date string."""
scalar DateTime

"""An ISO-8601 encoded date string."""
scalar Date

"""An ISO-8601 encoded time string."""
scalar Time

"""An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string."""
scalar URI